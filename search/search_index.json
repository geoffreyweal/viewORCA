{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"<code>viewORCA</code>: A Program for Viewing ORCA Calculations","text":"<p>This program is designed to allow the user to view ORCA calculations. Currently, viewORCA allows the user to view:</p> <ul> <li>Geometric Optimisation Calculations: View the local optimisation of an ORCA calculation, along with associated energy profile of the optimisation. </li> <li>SCAN Calculations: View the geometrically converged states of the images of a SCAN calculation, along with associated energy profile of the SCAN calculation. </li> <li>Nudged Elastic Band (NEB) Calculations: View the last NEB profile, along with the energy profile of the NEB calculation.</li> <li>Intrinsic Reaction Coordinate (IRC) Calculations: View the last NEB profile, along with the energy profile of the NEB calculation.</li> </ul>"},{"location":"index.html#orca","title":"ORCA","text":"<p>I have written this procedure for: </p> <ul> <li>ORCA 6.1.0 and 6.0.0</li> <li>ORCA 5.0.4 and 5.0.3</li> </ul> <p>This method should be valid for future versions of ORCA, but just in case any problems occur it may be due to ORCA version issues. </p>"},{"location":"index.html#installing-the-vieworca-program","title":"Installing the <code>viewORCA</code> Program","text":"<p>See Installation: Setting Up the <code>viewORCA</code> Program and Pre-Requisites Packages for more information. </p> <ul> <li>Note that you can install the <code>viewORCA</code> program through <code>pip3</code> and <code>conda</code>. </li> </ul>"},{"location":"index.html#instructions-for-using-vieworca","title":"Instructions for using <code>viewORCA</code>","text":"<p>This program is fundamental to the Procedure for Investigating Reaction Mechanisms in ORCA tutorial. Click on this tutorial to see how <code>viewORCA</code> can be used to view ORCA calculations. </p> <ul> <li>Also, click here to access the <code>viewORCA</code> manual.</li> </ul>"},{"location":"index.html#examples-for-using-vieworca","title":"Examples for using <code>viewORCA</code>","text":"<p>Examples of the various modules as used for visualising the various ORCA calculation types can be found in the Examples folder in Github. </p>"},{"location":"index.html#questions-and-feedback","title":"Questions and Feedback","text":"<p>If you have any questions about using <code>viewORCA</code>, or would like to provide feedback, click on the <code>Issues</code> page here, then click on the <code>New issue</code> button, and write you question/give you feedback. </p> <p>Any feedback would be amazing and appreciated! </p> <p>Thanks!</p>"},{"location":"index.html#acknowledgements","title":"Acknowledgements","text":"<p>The <code>viewORCA neb_snap</code> module is an adaptation of neb_snapshots.py by Vilhj\u00e1lmur \u00c1sgeirsson and Benedikt Orri Birgirsson of the Universiy of Iceland. </p>"},{"location":"Installation.html","title":"Installation: Setting Up the <code>viewORCA</code> Program and Pre-Requisites Packages","text":"<p>The following webpage describes how to install <code>viewORCA</code> on your computer, as well as all the other programs required by <code>viewORCA</code>.</p>"},{"location":"Installation.html#pre-requisites","title":"Pre-requisites","text":""},{"location":"Installation.html#python-3-and-pip3","title":"Python 3 and <code>pip3</code>","text":"<p>This tutorial is designed to work with Python 3. To find out if you have Python 3 on your computer and what version you have, type into the terminal:</p> <pre><code>python --version\n</code></pre> <p>If you have Python 3 on your computer, you will get the version of python you have on your computer. E.g:</p> <pre><code>user@computer_name path % python --version\nPython 3.11.6\n</code></pre> <p>If you have Python 3, you may have <code>pip</code> installed on your computer as well. <code>pip</code> is a python package installation tool that is recommended by Python for installing Python packages. To see if you have <code>pip</code> installed, type into the terminal:</p> <p><pre><code>pip list\n</code></pre> If you get back a list of python packages install on your computer, you have <code>pip</code> installed. E.g.</p> <pre><code>user@computer_name Documentation % pip3 list\nPackage         Version\n--------------- -----------\nase             3.26.0\ncontourpy       1.3.3\ncycler          0.12.1\net_xmlfile      2.0.0\nfcswrite        0.6.2\nfonttools       4.60.1\nkiwisolver      1.4.9\nmatplotlib      3.10.6\nnarwhals        2.7.0\nnumpy           2.3.3\nopenpyxl        3.1.5\npackaging       25.0\npandas          2.3.3\npatsy           1.0.1\npillow          11.3.0\npip             25.2\nplotly          6.3.1\npyparsing       3.2.5\npython-dateutil 2.9.0.post0\npytz            2025.2\nscipy           1.16.2\nsetuptools      80.9.0\nsix             1.17.0\nstatsmodels     0.14.5\ntqdm            4.67.1\ntzdata          2025.2\nviewORCA        0.2.2\nxlsxwriter      3.2.9\n</code></pre> <p>If you do not see this, you probably do not have <code>pip</code> installed on your computer. If this is the case, check out PIP Installation. </p> <p>Note</p> <p>In most cases, <code>pip</code> and <code>pip3</code> are synonymous for the Python Installation Package for Python 3. However in some cases, <code>pip</code> will be directed to the Python Installation Package for Python 2 rather than Python 3. To check this, run in the terminal:</p> <pre><code>pip --version\n</code></pre> <p>If the output indicates you this Python Installation Package is for Python 2 and not Python 3, only install packages using the <code>pip3</code> name. </p> <p>For the rest of this documentation, <code>pip</code> will be used, however if your computer's <code>pip</code>  refers to Python 2 and not Python 3, use <code>pip3</code>  instead of <code>pip</code>. </p>"},{"location":"Installation.html#packaging","title":"Packaging","text":"<p>The <code>packaging</code> program is also used in this program to check the versions of ASE that you are using for compatibility issues. The easiest way to install <code>packaging</code> is though <code>pip</code>. Type the following into the terminal:</p> <pre><code>pip3 install --upgrade --user packaging\n</code></pre>"},{"location":"Installation.html#numpy","title":"Numpy","text":"<p>The <code>numpy</code> program is used in this program to perform matrix calculations, as well as used by <code>ase</code>. The easiest way to install <code>numpy</code> is though <code>pip</code>. Type the following into the terminal:</p> <pre><code>pip3 install --upgrade --user numpy\n</code></pre>"},{"location":"Installation.html#scipy","title":"Scipy","text":"<p>The <code>scipy</code> program is used by the <code>ase</code> program. The easiest way to install <code>scipy</code> is though <code>pip</code>. Type the following into the terminal:</p> <pre><code>pip3 install --upgrade --user scipy\n</code></pre>"},{"location":"Installation.html#matplotlib","title":"Matplotlib","text":"<p>The <code>matplotlib</code> program is used in this program to create the energy profile plots made by the <code>viewORCA neb_snap</code> module. The easiest way to install <code>matplotlib</code> is though <code>pip</code>. Type the following into the terminal:</p> <pre><code>pip3 install --upgrade --user matplotlib\n</code></pre>"},{"location":"Installation.html#atomic-simulation-environment-ase","title":"Atomic Simulation Environment (ASE)","text":"<p>The Atomic Simulation Environment (ASE) is used to read and write molecule data, as well as to view molecules in a GUI. Read more about ASE here. </p> <p>The installation of ASE can be found on the ASE installation page, however from experience if you are using ASE for the first time, it is best to install ASE using <code>pip</code>, the package manager that is an extension of python to keep all your program easily managed and easy to import into your python. </p> <p>To install ASE using <code>pip</code>, perform the following in your terminal.</p> <pre><code>pip3 install --user --upgrade numpy scipy matplotlib\npip3 install --user --upgrade ase\n</code></pre> <p>Installing using <code>pip</code> ensures that ASE is being installed to be used by Python 3, and not Python 2. Installing ASE like this will also install all the requisite program needed for ASE. This installation includes the use of features such as viewing the xyz files of structure and looking at ase databases through a website. These should be already assessible, which you can test by entering into the terminal:</p> <pre><code>ase gui\n</code></pre> <p>This should show a GUI with nothing in it, as shown below:</p> This is a blank ase gui screen that you would see if enter ase gui into the terminal. <p>However, in the case that this does not work, we need to manually add a path to your <code>~/.bashrc</code> so you can use the ASE features externally outside python. Do the following; first enter the following into the terminal:</p> <pre><code>pip show ase\n</code></pre> <p>This will give a bunch of information, including the location of ase on your computer. For example, when I do this I get:</p> <pre><code>user@computer_name docs % pip show ase\nName: ase\nVersion: 3.26.0\nSummary: Atomic Simulation Environment\nHome-page: https://ase-lib.org/\nAuthor: \nAuthor-email: \nLicense-Expression: LGPL-2.1-or-later\nLocation: /Users/geoffreyweal/Library/Python/3.11/lib/python/site-packages\nRequires: matplotlib, scipy, numpy\nRequired-by: \n</code></pre> <p>Copy the <code>Location</code> line. If we remove the <code>lib/python/site-packages</code> bit and replace it with <code>bin</code>, this gives us the location of useful ASE programs. The example below is for Python 3.11. </p> <pre><code>/Users/geoffreyweal/Library/Python/3.11/bin\n</code></pre> <p>Next, add this to your <code>~/.bashrc</code> file as below:</p> <pre><code>############################################################\n# For ASE\nexport PATH=/Users/geoffreyweal/Library/Python/3.11/bin:$PATH\n############################################################\n</code></pre> <p>Write <code>source ~/.bashrc</code> in the terminal and press enter. Once you have done this, try to run <code>ase gui</code> in the terminal. This will hopefully show the ase gui and allow you to access the useful ASE programs through the terminal. </p>"},{"location":"Installation.html#setting-up-the-vieworca-program","title":"Setting up the <code>viewORCA</code> Program","text":"<p>There are two ways to install <code>viewORCA</code> on your system. These ways are described below:</p>"},{"location":"Installation.html#install-vieworca-through-pip3-easy","title":"Install <code>viewORCA</code> through <code>pip3</code> (Easy)","text":"<p>To install the <code>viewORCA</code> program using <code>pip3</code>, perform the following in your terminal.</p> <pre><code>pip3 install --upgrade --user viewORCA\n</code></pre> <p>The website for <code>viewORCA</code> on <code>pip3</code> can be found by clicking here.</p> <p>Tip</p> <p>This is the recommended way of installing <code>viewORCA</code> on your computer.</p>"},{"location":"Installation.html#install-development-version-of-vieworca-hard","title":"Install Development Version of <code>viewORCA</code> (Hard)","text":"<p>If you would like to test the development version of <code>viewORCA</code> from Github, there are two ways to do this:</p> <p>Warning</p> <p>This is not recommended as this version of <code>viewORCA</code> may be unstable. </p>"},{"location":"Installation.html#1-install-vieworca-from-github-through-pip3","title":"1. Install <code>viewORCA</code> from Github through <code>pip3</code>","text":"<p>You can install <code>viewORCA</code> from Github through <code>pip3</code> by performing the following in your terminal.</p> <pre><code>pip3 install --upgrade --user git+https://github.com/geoffreyweal/viewORCA.git\n</code></pre>"},{"location":"Installation.html#2-install-vieworca-manually-from-github","title":"2. Install <code>viewORCA</code> Manually from Github","text":"<p>To install the <code>viewORCA</code> program manually onto your computer, do the following:</p> <ol> <li> <p>Open the terminal and <code>cd</code> into the path that you want to download the programs into.</p> <pre><code>cd /Users/USERNAME\n</code></pre> </li> <li> <p>Download <code>viewORCA</code> to your computer by typing the following commands into the terminal:</p> <pre><code>git clone https://github.com/geoffreyweal/viewORCA.git\n</code></pre> </li> <li> <p>Change the permissions of the newly downloded <code>viewORCA</code> folder to <code>777</code>:</p> <pre><code>chmod -R 777 viewORCA\n</code></pre> </li> <li> <p>Add the following to your <code>~bashrc</code> by typing the following into the terminal:</p> <pre><code>echo '#############################################\n# For the viewORCA Program\nexport PATH_TO_viewORCA='$PWD'/viewORCA\nexport PYTHONPATH=\"$PATH_TO_viewORCA\":$PYTHONPATH\nexport PATH=\"$PATH_TO_viewORCA\"/bin:$PATH\n#############################################' &gt;&gt; ~/.bashrc\n</code></pre> <p>This should add the following to your <code>~/.bashrc</code> file:</p> <pre><code>#############################################\n# For the ORCA Mechanism Procedure\nexport PATH_TO_viewORCA=\"YOUR_PWD_PATH/viewORCA\"\nexport PYTHONPATH=\"$PATH_TO_viewORCA\":$PYTHONPATH\nexport PATH=\"$PATH_TO_viewORCA\"/bin:$PATH\n#############################################\n</code></pre> <p>Tip</p> <p>Make sure that the path given to <code>PATH_TO_viewORCA</code> is the correct path to the <code>viewORCA</code> folder. </p> <p>An example of what the <code>PATH_TO_viewORCA</code> path should look like is shown below:</p> <pre><code># An example of:\nexport PATH_TO_viewORCA=\"YOUR_PWD_PATH/viewORCA\"\n# is shown below\nexport PATH_TO_viewORCA=/Users/USERNAME/viewORCA\n</code></pre> </li> <li> <p>Source the <code>~bashrc</code> file:</p> <pre><code>source ~/.bashrc\n</code></pre> </li> <li> <p>Check that your computer recognises the programs by typing the following into the terminal</p> <pre><code>which viewORCA\n</code></pre> <p>If this has worked, the terminal should give you the path to the <code>viewORCA</code> program. For example</p> <pre><code>USERNAME@computer USERNAME % which viewORCA\n/Users/USERNAME/viewORCA/bin/viewORCA\n</code></pre> <p>Warning</p> <p>If you get the message below, check that the path you gave for <code>PATH_TO_ORCA_Mechanism_Procedure</code> is pointing to the correct folder path. </p> <pre><code>/usr/bin/which: no viewORCA in ...\n</code></pre> </li> </ol>"},{"location":"viewORCA_Manual.html","title":"<code>viewORCA</code> Manual","text":"<p>There are several modules available for viewing ORCA calculations. This webpage describes all the modules available in <code>viewORCA</code>:</p> Info <p>You can view all the module available in <code>viewORCA</code> by typing <code>viewORCA --help</code> into the terminal:</p> <pre><code>username@computer name Desktop % viewORCA --help        \nusage: viewORCA [-h] [-T] {help,opt,scan,neb,neb_snap,irc,multi,move_com,combine} ...\n\nProgram for viewing jobs from ORCA\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -T, --traceback\n\nSub-commands:\n  {help,opt,scan,neb,neb_snap,irc,multi,move_com,combine}\n    help                Help for sub-command.\n    opt                 This module allows the user to view the output of an ORCA geometric optimisation job visually.\n    scan                This module allows the user to view the output of an ORCA SCAN job visually.\n    neb                 This module allows the user to view the output of an ORCA Nudged Elastic Band (NEB) job visually.\n    neb_snap            This module allows the user to view the progress of an ORCA Nudged Elastic Band (NEB) job (as it is running or after it has run) by viewing the\n                        energy profiles of all the iterations of the NEB optimisation job.\n    irc                 This module allows the user to view the output of an ORCA Intrinsic Reaction Coordinate (IRC) job visually.\n    multi               This module allows the user to obtain the number of electrons in the system of interest, and therefore obtain the possible multiplicities that the\n                        system could be in.\n    move_com            This module allows the user to move the centre of mass of a system.\n    combine             This module allows the user to combine a set of chemical systems together.\n</code></pre>"},{"location":"viewORCA_Manual.html#vieworca-opt-view-geometric-optimisation-calculation","title":"<code>viewORCA opt</code>: View Geometric Optimisation Calculation","text":"<p>This module is designed to allow the user to view the output of an ORCA geometric optimisation job visually. </p> <p>To use this module:</p> <ol> <li>In the terminal, change directory into the directory containing your geometric optimisation job, and </li> <li>type <code>viewORCA opt</code> into the terminal. </li> </ol> <pre><code># First, change directory into the folder containing your ORCA geometric optimisation job.\ncd path_to_geometric_optimisation_job\n\n# Second, run \"viewORCA opt\".\nviewORCA opt\n</code></pre> <p><code>viewORCA opt</code> will extract information from the <code>ORCA_INPUT_FILENAME_trj.xyz</code> file and show the images of the optimisation, along with the energy profile of the optimisation. </p> <ul> <li>For this reason, you MUST have the <code>ORCA_INPUT_FILENAME_trj.xyz</code> file in your geometric optimisation folder for <code>viewORCA opt</code> to work.</li> <li>The prefix <code>ORCA_INPUT_FILENAME</code> is the same prefix you gave to your ORCA input file (being <code>ORCA_INPUT_FILENAME.inp</code>). </li> </ul> <p>This program will also create an xyz file called <code>ORCA_INPUT_FILENAME_OPT_images.xyz</code> that contains the images and the energy profile from the optimisation. </p> <ul> <li> <p>You can view this by typing <code>ase gui ORCA_INPUT_FILENAME_OPT_images.xyz</code> into the terminal.</p> <pre><code>ase gui ORCA_INPUT_FILENAME_OPT_images.xyz\n</code></pre> </li> </ul> <p>Optional inputs for <code>viewORCA opt</code> include:</p> <ul> <li><code>--path</code>: This is the path to the folder containing the ORCA optimisation calculation. If not given, the default path is the current directory you are in. </li> <li><code>--view</code>: If tag indicates if you want to view the ASE GUI for the optimisation job immediate after this program has run. By default this is <code>True</code>. If you only want to create the <code>ORCA_INPUT_FILENAME_OPT_images.xyz</code> file and not view it immediately, set this to <code>False</code>.<ul> <li>Setting this to <code>False</code> is ideal if you are running <code>viewORCA</code> on an HPC, where <code>ase gui</code> windows may be more responsive if <code>ase gui</code> is run from your own computer rather than directly on the HPC. </li> <li>You can view <code>ORCA_INPUT_FILENAME_OPT_images.xyz</code> on your computer by typing the following into the terminal: <code>ase gui ORCA_INPUT_FILENAME_OPT_images.xyz</code>.</li> </ul> </li> </ul> Example <p>An example of a geometric optimisation viewed using <code>viewORCA opt</code> is shown below, along with the energy profile for this optimisation. This example is given in Examples/viewORCA_opt</p> <p> NEB Images from a geometric optimisation </p> <p>The energy profile for this example is given below:</p> <p> Energy Profile from a geometric optimisation </p>"},{"location":"viewORCA_Manual.html#vieworca-scan-view-scan-calculation","title":"<code>viewORCA scan</code>: View SCAN Calculation","text":"<p>This module is designed to allow the user to view the output of an ORCA SCAN job visually. </p> <p>To use this module:</p> <ol> <li>In the terminal, change directory into the directory containing your SCAN job, and </li> <li>type <code>viewORCA scan</code> into the terminal. </li> </ol> <pre><code># First, change directory into the folder containing your ORCA SCAN job.\ncd path_to_SCAN_job\n\n# Second, run \"viewORCA scan\".\nviewORCA scan\n</code></pre> <p>Note</p> <p>If you needed to restart your SCAN calculation part-way though the calculation for some reason and have multiple SCAN calculations that consectively run one after the other, you can run these sets of calculations together through <code>viewORCA scan</code></p> <ul> <li><code>viewORCA scan</code> will cellotape these calculations together so you can see the SCAN images together, and the full energy profile in one plot.</li> </ul> <p>To use <code>viewORCA scan</code> in this way, make sure that your SCAN jobs are placed in separate folders called <code>SCAN_1</code>, <code>SCAN_2</code>, <code>SCAN_3</code>, so on and so on. <code>viewORCA scan</code> will paste these together in numerical order of these folders.</p> <ul> <li>Click here to learn more about this from the Procedure for Investigating Chemical Mechanisms with ORCA tutorial. </li> </ul> <p><code>viewORCA scan</code> will show the images of the SCAN calculation, along with the energy profile of the SCAN calculation. </p> <ul> <li> <p>This program will also create an xyz file called <code>SCAN_images.xyz</code> that contains the images and the energy profile from the SCAN calculation. You can view this by typing <code>ase gui SCAN_images.xyz</code> into the terminal.</p> <pre><code>ase gui SCAN_images.xyz\n</code></pre> </li> </ul> <p>Optional inputs for <code>viewORCA scan</code> include:</p> <ul> <li><code>--path</code>: This is the path to the folder containing the ORCA SCAN calculation. If not given, the default path is the current directory you are in. </li> <li><code>--view</code>: If tag indicates if you want to view the ASE GUI for the SCAN job immediate after this program has run. By default this is <code>True</code>. If you only want to create the <code>SCAN_images.xyz</code> file and not view it immediately, set this to <code>False</code>.<ul> <li>Setting this to <code>False</code> is ideal if you are running <code>viewORCA</code> on an HPC, where <code>ase gui</code> windows may be more responsive if <code>ase gui</code> is run from your own computer rather than directly on the HPC. </li> <li>You can view <code>SCAN_images.xyz</code> on your computer by typing the following into the terminal: <code>ase gui SCAN_images.xyz</code>.</li> </ul> </li> </ul> Example <p>An example of a SCAN calculation viewed using <code>viewORCA scan</code> is shown below, along with the energy profile for this SCAN calculation. This example is given in Examples/viewORCA_scan</p> <p> NEB Images from a SCAN calculation </p> <p>The energy profile for this example is given below:</p> <p> Energy Profile from a SCAN calculation </p>"},{"location":"viewORCA_Manual.html#vieworca-neb-view-nudged-elastic-band-neb-calculation","title":"<code>viewORCA neb</code>: View Nudged Elastic Band (NEB) Calculation","text":"<p>This module is designed to allow the user to view the output of an ORCA NEB job visually. </p> <p>To use this module:</p> <ol> <li>In the terminal, change directory into the directory containing your NEB job, and </li> <li>type <code>viewORCA neb</code> into the terminal. </li> </ol> <pre><code># First, change directory into the folder containing your ORCA NEB job.\ncd path_to_NEB_job\n\n# Second, run \"viewORCA neb\".\nviewORCA neb\n</code></pre> <p><code>viewORCA neb</code> will extract information from the <code>ORCA_INPUT_FILENAME_MEP_trj.xyz</code> file and show the images of the NEB calculation, along with the energy profile of the NEB calculation. </p> <ul> <li>For this reason, you MUST have the <code>ORCA_INPUT_FILENAME_MEP_trj.xyz</code> file in your NEB calculation folder for <code>viewORCA neb</code> to work.</li> <li>The prefix <code>ORCA_INPUT_FILENAME</code> is the same prefix you gave to your ORCA input file (being <code>ORCA_INPUT_FILENAME.inp</code>). </li> </ul> <p>This program will also create an xyz file called <code>ORCA_INPUT_FILENAME_NEB_images.xyz</code> that contains the images and the energy profile from the NEB calculation. </p> <ul> <li> <p>You can view this by typing <code>ase gui ORCA_INPUT_FILENAME_NEB_images.xyz</code> into the terminal.</p> <pre><code>ase gui ORCA_INPUT_FILENAME_NEB_images.xyz\n</code></pre> </li> </ul> <p>Optional inputs for <code>viewORCA neb</code> include:</p> <ul> <li><code>--path</code>: This is the path to the folder containing the ORCA NEB calculation. If not given, the default path is the current directory you are in. </li> <li><code>--view</code>: If tag indicates if you want to view the ASE GUI for the NEB job immediate after this program has run. By default this is <code>True</code>. If you only want to create the <code>ORCA_INPUT_FILENAME_NEB_images.xyz</code> file and not view it immediately, set this to <code>False</code>.<ul> <li>Setting this to <code>False</code> is ideal if you are running <code>viewORCA</code> on an HPC, where <code>ase gui</code> windows may be more responsive if <code>ase gui</code> is run from your own computer rather than directly on the HPC. </li> <li>You can view <code>ORCA_INPUT_FILENAME_NEB_images.xyz</code> on your computer by typing the following into the terminal: <code>ase gui ORCA_INPUT_FILENAME_NEB_images.xyz</code>.</li> </ul> </li> </ul> Example <p>An example of a NEB calculation viewed using <code>viewORCA neb</code> is shown below, along with the energy profile for this NEB calculation. This example is given in Examples/viewORCA_neb_and_neb_snap</p> <p> NEB Images from a NEB calculation </p> <p>The energy profile for this example is given below:</p> <p> Energy Profile from a NEB calculation </p>"},{"location":"viewORCA_Manual.html#vieworca-neb_snap-view-neb-optimisation-process","title":"<code>viewORCA neb_snap</code>: View NEB Optimisation Process","text":"<p>This module is designed to allow the user to view the energy profile of all the iterations performed during the NEB optimisation process. This module is an adaptation of neb_snapshots.py by Vilhj\u00e1lmur \u00c1sgeirsson and Benedikt Orri Birgirsson of the Universiy of Iceland. </p> <ul> <li>It is helpful to view this as your NEB calculation is running to check if there are any issues occurring as ORCA us running the NEB calculation. </li> </ul> <p>To use this module:</p> <ol> <li>In the terminal, change directory into the directory containing your NEB job, and </li> <li>type <code>viewORCA neb_snap</code> into the terminal. </li> </ol> <pre><code># First, change directory into the folder containing your ORCA NEB job.\ncd path_to_NEB_job\n\n# Second, run \"viewORCA neb_snap\".\nviewORCA neb_snap\n</code></pre> <p><code>viewORCA neb_snap</code> will extract information from the <code>ORCA_INPUT_FILENAME.interp</code> file and create plots of the energy profiles of all the iterations of the NEB optimisation process. </p> <ul> <li>For this reason, you MUST have the <code>ORCA_INPUT_FILENAME.interp</code> file in your NEB calculation folder for <code>viewORCA neb_snap</code> to work.</li> <li>The prefix <code>ORCA_INPUT_FILENAME</code> is the same prefix you gave to your ORCA input file (being <code>ORCA_INPUT_FILENAME.inp</code>). </li> </ul> <p><code>viewORCA neb_snap</code> will create two png files containing the energy profiles of the NEB calculation:</p> <ul> <li><code>ORCA_INPUT_FILENAME_NEB_optimization.png</code>: This plot displays the NEB energy profiles of all iterations performed during the NEB optimisation process. </li> <li><code>ORCA_INPUT_FILENAME_NEB_last_iteration.png</code>: This plot shows the energy profile of the last iteration performed from the NEB optimisation process. </li> </ul> <p>Optional inputs for <code>viewORCA neb_snap</code> include:</p> <ul> <li><code>--path</code>: This is the path to the folder containing the ORCA NEB calculation. If not given, the default path is the current directory you are in. <ul> <li>You can also provide the path to the <code>.interp</code> file you want to process if you want to process a specific <code>.interp</code> file of interest. This file must end with the <code>.interp</code> suffix. </li> </ul> </li> </ul> Example <p>An example of a NEB optimisation calculation viewed using <code>viewORCA neb_snap</code> is shown below, along with the energy profile of the last iteration for this NEB calculation. This example is given in Examples/viewORCA_neb_and_neb_snap</p> <p> Energy Profile of each NEB optimisation iteration performed by ORCA. This is given by the 'ORCA_INPUT_FILENAME_NEB_optimization.png' file. </p> <p> Energy Profile of each NEB optimisation iteration performed by ORCA. This is given by the 'ORCA_INPUT_FILENAME_NEB_last_iteration.png' file. </p>"},{"location":"viewORCA_Manual.html#vieworca-irc-view-intrinsic-reaction-coordinate-irc-calculation","title":"<code>viewORCA irc</code>: View Intrinsic Reaction Coordinate (IRC) Calculation","text":"<p>This module is designed to allow the user to view the output of an ORCA IRC job visually. </p> <p>To use this module:</p> <ol> <li>In the terminal, change directory into the directory containing your IRC job, and </li> <li>type <code>viewORCA irc</code> into the terminal. </li> </ol> <pre><code># First, change directory into the folder containing your ORCA IRC job.\ncd path_to_geometric_optimisation_job\n\n# Second, run \"viewORCA irc\".\nviewORCA irc\n</code></pre> <p><code>viewORCA irc</code> will extract information from the <code>ORCA_INPUT_FILENAME_IRC_Full_trj.xyz</code> file and show the images of the IRC calculation, along with the energy profile of the IRC calculation. </p> <ul> <li>For this reason, you MUST have the <code>ORCA_INPUT_FILENAME_IRC_Full_trj.xyz</code> file in your NEB calculation folder for <code>viewORCA neb</code> to work.</li> <li>The prefix <code>ORCA_INPUT_FILENAME</code> is the same prefix you gave to your ORCA input file (being <code>ORCA_INPUT_FILENAME.inp</code>). </li> </ul> <p>This program will also create an xyz file called <code>ORCA_INPUT_FILENAME_IRC_images.xyz</code> that contains the images and the energy profile from the IRC calculation. </p> <ul> <li> <p>You can view this by typing <code>ase gui ORCA_INPUT_FILENAME_IRC_images.xyz</code> into the terminal</p> <pre><code>ase gui ORCA_INPUT_FILENAME_IRC_images.xyz\n</code></pre> </li> </ul> <p>Optional inputs for <code>viewORCA irc</code> include:</p> <ul> <li><code>--path</code>: This is the path to the folder containing the ORCA IRC calculation. If not given, the default path is the current directory you are in. </li> <li><code>--view</code>: If tag indicates if you want to view the ASE GUI for the IRC job immediate after this program has run. By default this is <code>True</code>. If you only want to create the <code>SCAN_images.xyz</code> file and not view it immediately, set this to <code>False</code>.<ul> <li>Setting this to <code>False</code> is ideal if you are running <code>viewORCA</code> on an HPC, where <code>ase gui</code> windows may be more responsive if <code>ase gui</code> is run from your own computer rather than directly on the HPC. </li> <li>You can view <code>ORCA_INPUT_FILENAME_IRC_images.xyz</code> on your computer by typing the following into the terminal: <code>ase gui ORCA_INPUT_FILENAME_IRC_images.xyz</code>.</li> </ul> </li> </ul> Example <p>An example of a IRC calculation viewed using <code>viewORCA irc</code> is shown below, along with the energy profile for this IRC calculation. This example is given in Examples/viewORCA_irc</p> <p> NEB Images from a IRC calculation </p> <p>The energy profile for this example is given below:</p> <p> Energy Profile from a IRC calculation </p>"},{"location":"viewORCA_Manual.html#vieworca-multi-obtain-possible-electron-multiplicities-for-your-system","title":"<code>viewORCA multi</code>: Obtain Possible Electron Multiplicities for your System","text":"<p>One of the inputs that you need to give to your ORCA input <code>.inp</code> file is the multiplicity of the system. The multiplicity indicates the total electron spin of your system. The value of the muliticity is based on the number of electrons are in your system, where the multiplicity is based on the \\(M = 2S + 1\\) rule: </p> <ul> <li>If you have an even number of electrons in your system, the multiplicity will be an odd number. The lowest value multiplicity is 1.</li> <li>If you have an odd  number of electrons in your system, the multiplicity will be an even number. The lowest value multiplicity is 2 (It can not be 0).</li> </ul> <p>If you want to easily figure out if you should have an even or odd multiplicity, the <code>viewORCA multi</code> will determine the number of electrons your system has, and from this indicate if your multiplicity will be even or odd.</p> <p>To use this module:</p> <ol> <li>In the terminal, change directory into the directory containing your geometric optimisation job, and </li> <li> <p>type <code>viewORCA multi filepath --charge=charge</code> into the terminal, where:</p> <ul> <li><code>filepath</code> is the path to the <code>xyz</code> file of your system, and </li> <li><code>--charge</code> is the overall charge of your system (if <code>--charge</code> is not given, the default given is 0).</li> </ul> </li> </ol> Example 1: Cu(I)-Benzylamine <p>Cu(II)-Benzylimion (with a missing hydrogen and having a charge of +1) contains 86 electrons, so it can have an odd multiplicity. For Cu(I) systems, the ground spin state multiplicity is 1. See the xyz file for Cu(II)-Benzylimion in Examples/viewORCA_multi/Example_1</p> <pre><code>username@computer:username/Desktop$ viewORCA multi Cu_I-Benzylamine.xyz --charge=1\nNumber of electrons in Cu_I-Benzylamine.xyz is: 86\nThe total number of electrons in the system is even.\nThe multiplicity can be an odd number greater than or equal to 1 based on the M=2S+1 rule. Examples: 1,3,5,7,9,11,.. \n</code></pre> <p> Left: Image of Cu(I)-Benzylamine. Right: 3d orbital diagram of octahedral Cu(I). </p> Example 2: Cu(II)-Benzylimion <p>Cu(II)-Benzylimion (with a missing hydrogen and having a charge of +1) contains 83 electrons, so it can have an even multiplicity. For Cu(II) systems, the ground spin state multiplicity is 2. See the xyz file for Cu(II)-Benzylimion in Examples/viewORCA_multi/Example_2</p> <pre><code>username@computer:username/Desktop$ viewORCA multi Cu_II-BnzImine_1+.xyz --charge=+1\nNumber of electrons in Cu-BnzImine_1+.xyz is: 83\nThe total number of electrons in the system is odd.\nThe multiplicity can be an even number greater than or equal to 2 based on the M=2S+1 rule. Examples: 2,4,6,8,10,12,..\n</code></pre> <p> Left: Image of Cu(II)-Benzylimion. Right: 3d orbital diagram of octahedral Cu(II). </p> Example 3: Benzylamine <p>Benzylamine contains 58 electrons, so it can have an odd multiplicity. For organic systems, the ground spin state multiplicity is 1. See the xyz file for Benzylamine in Examples/viewORCA_multi/Example_3</p> <pre><code>username@computer:username/Desktop$ viewORCA multi Benzylamine.xyz --charge=0\nNumber of electrons in Benzylamine.xyz is: 58\nThe total number of electrons in the system is even.\nThe multiplicity can be an odd number greater than or equal to 1 based on the M=2S+1 rule. Examples: 1,3,5,7,9,11,..\n</code></pre> <p> Image of Benzylamine. </p> Example 4: Cu(II)-Benzylimine <p>Cu(II)-Benzylimine contains 83 electrons, so it can have an even multiplicity. For Cu(II) systems, the ground spin state multiplicity is 2. See the xyz file for Cu(II)-Benzylimine in Examples/viewORCA_multi/Example_4</p> <pre><code>username@computer:username/Desktop$ viewORCA multi Cu_II-BnzImine-H_2+.xyz --charge=+2\nNumber of electrons in Cu-BnzImine-H_2+.xyz is: 83\nThe total number of electrons in the system is odd.\nThe multiplicity can be an even number greater than or equal to 2 based on the M=2S+1 rule. Examples: 2,4,6,8,10,12,..\n</code></pre> <p> Left: Image of Cu(II)-Benzylimine. Right: 3d orbital diagram of octahedral Cu(II). </p> Example 5: Benzylamion anion <p>Benzylamion anion (with a missing hydrogen and having a charge of -1) contains 58 electrons, so it can have an even multiplicity. For organic systems, the ground spin state multiplicity is 1. See the xyz file for Benzylamion anion in Examples/viewORCA_multi/Example_5</p> <pre><code>username@computer:username/Desktop$ viewORCA multi Benzyl-NH_1-.xyz --charge=-1\nNumber of electrons in Benzyl-NH_1-.xyz is: 58\nThe total number of electrons in the system is even.\nThe multiplicity can be an odd number greater than or equal to 1 based on the M=2S+1 rule. Examples: 1,3,5,7,9,11,..\n</code></pre> <p> Image of Benzylamion anion. </p>"},{"location":"viewORCA_Manual.html#vieworca-move_com-move-the-centre-of-mass-of-your-chemical-system","title":"<code>viewORCA move_com</code>: Move the Centre-of-Mass of your Chemical System","text":"<p>This method is designed to move the centre of mass of a chemical system. </p> <p>To use this module:</p> <ol> <li>In the terminal, change directory into the directory containing the xyz files of the chemical systems you want to change the centre of masses of, and </li> <li> <p>type <code>viewORCA move_com filepath --move_centre_of_mass_to=move_centre_of_mass_to</code> into the terminal, where:</p> <ul> <li><code>filepath</code> is the path to the <code>xyz</code> file of your system, and </li> <li><code>--move_centre_of_mass_to</code> is the position you would like to move the centre of mass of your chemical system to. Make sure you give your coordicates as <code>x,y,z</code>, including commas between coordinates. If <code>--move_centre_of_mass_to</code> is not given, the default given is the origin \\((0.0,0.0,0.0)\\).</li> </ul> </li> </ol> <p>The output file will be saved as <code>filepath</code>, but with <code>move_centre_of_mass_to</code> saved in the filename. </p> Example <p>Lets consider that you have a benzylamine molecule that you want to move its centre of mass to \\((10.0,0.0,0.0)\\). We perform the following in the terminal:</p> <pre><code># First, change directory into the folder containing your xyz files you want to move the centre of mass of.\ncd path_to_xyz_files\n\n# Second, run \"viewORCA move_com\".\nviewORCA move_com Benzylamine.xyz -c 10.0,0.0,0.0\n</code></pre> <p>We will get a new file called <code>Benzylamine_com_10.0_0.0_0.0.xyz</code>, which is the benzylamine molecule but moved to \\((10.0,0.0,0.0)\\). This example is given in Examples/viewORCA_move_com</p> <p> Image of Benzylamine before and after its centre of mass is moved. </p>"},{"location":"viewORCA_Manual.html#vieworca-combine-combine-several-chemical-systems-together","title":"<code>viewORCA Combine</code>: Combine Several Chemical Systems Together","text":"<p>This method is designed to allow the user to easily combine multiple xyz files together into the same chemical system. </p> <p>To use this module:</p> <ol> <li>In the terminal, change directory into the directory containing the xyz files of the chemical systems you want to combine together. </li> <li> <p>type <code>viewORCA combine filepath_for_system_1 filepath_for_system_2 filepath_for_system_3 ...</code> into the terminal, where:</p> <ul> <li><code>filepath_for_system_1, filepath_for_system_2, ...</code> are the paths to all the xyz files you would like to combine together.  </li> </ul> </li> </ol> Example <p>Say we want to combine an <code>xyz</code> file containing a Cu(II)-benzylimine molecule (with centre of mass = \\((0.0, 0.0, 0.0)\\)) with another <code>xyz</code> file containing a benylamine molecule (with centre of mass = \\((10.0, 0.0, 0.0)\\)). We would run the code below to achieve this:</p> <pre><code># First, change directory into the folder containing your xyz files you want to combine together. \ncd path_to_xyz_files\n\n# Second, run \"viewORCA move_com\".\nviewORCA combine Benzylamine_com_10.0_0.0_0.0.xyz Cu_II-BnzImine_1+_com_0_0_0.xyz\n</code></pre> <p><code>viewORCA combine</code> will print the shortest distances between the chemical system you combine together so you know they are a good distance from each other. If you see that any distance is less than 3.0 \u00c5, you may have accidently merged your chemical systems together. </p> <p>You will also see a new file has been made called <code>overall_chemical_system.xyz</code> that contains your overall chemical system. This example is given in Examples/viewORCA_combine. Make sure you check this file </p> <p> Combining Benzylamine and Cu(II)-benzylimine into one xyz file. </p>"}]}